// Settings in here override those in "LSP-typescript/LSP-typescript.sublime-settings"
{
  "initializationOptions": {
    "locale": "es",
    "preferences": {
      "allowIncompleteCompletions": true,
      "allowRenameOfImportPath": true,
      "allowTextChangesInNewFiles": true,
      "autoImportFileExcludePatterns": [],
      "disableSuggestions": false,
      "displayPartsForJSDoc": true,
      "excludeLibrarySymbolsInNavTo": true,
      "generateReturnInDocTemplate": true,
      "importModuleSpecifierEnding": "auto",
      "importModuleSpecifierPreference": "shortest",
      "includeAutomaticOptionalChainCompletions": true,
      "includeCompletionsForImportStatements": true,
      "includeCompletionsForModuleExports": true,
      "includeCompletionsWithClassMemberSnippets": true,
      "includeCompletionsWithInsertText": true,
      "includeCompletionsWithObjectLiteralMethodSnippets": true,
      "includeCompletionsWithSnippetText": true,
      "includePackageJsonAutoImports": "auto",
      "interactiveInlayHints": true,
      "jsxAttributeCompletionStyle": "auto",
      "lazyConfiguredProjectsFromExternalProject": true,
      "organizeImportsAccentCollation": true,
      "organizeImportsCaseFirst": "upper",
      "organizeImportsCollation": "ordinal",
      "organizeImportsCollationLocale": "es",
      "organizeImportsIgnoreCase": "auto",
      "organizeImportsNumericCollation": true,
      "providePrefixAndSuffixTextForRename": true,
      "provideRefactorNotApplicableReason": true,
      "quotePreference": "double",
      "useLabelDetailsInCompletionEntries": true,
    },
    "completionDisableFilterText": false,
    "disableAutomaticTypingAcquisition": false,
    "hostInfo": "",
    "maxTsServerMemory": 0,
    "npmLocation": "",
    "plugins": [{
      "location": "",
      "name": "",
    }],
    "tsserver.fallbackPath": "",
    "tsserver.logDirectory": "",
    "tsserver.logVerbosity": "off",
    "tsserver.path": "",
    "tsserver.trace": "off",
    "tsserver.useSyntaxServer": "auto",
  },
  "settings": {
    "completions.completeFunctionCalls": true,
    "diagnostics.ignoredCodes": [],
    "implicitProjectConfiguration.checkJs": true,
    "implicitProjectConfiguration.experimentalDecorators": true,
    "implicitProjectConfiguration.module": "ESNext",
    "implicitProjectConfiguration.strictFunctionTypes": true,
    "implicitProjectConfiguration.strictNullChecks": true,
    "implicitProjectConfiguration.target": "ESNext",
    "javascript.format.insertSpaceAfterCommaDelimiter": true,
    "javascript.format.insertSpaceAfterConstructor": true,
    "javascript.format.insertSpaceAfterTypeAssertion": true,
    "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
    "javascript.format.insertSpaceBeforeTypeAnnotation": true,
    "javascript.format.semicolons": "insert",
    "javascript.format.trimTrailingWhitespace": true,
    "javascript.implementationsCodeLens.enabled": true,
    "javascript.referencesCodeLens.enabled": true,
    "statusText": "$version, $source",
    "typescript.format.insertSpaceAfterCommaDelimiter": true,
    "typescript.format.insertSpaceAfterConstructor": true,
    "typescript.format.insertSpaceAfterTypeAssertion": true,
    "typescript.format.insertSpaceBeforeFunctionParenthesis": true,
    "typescript.format.insertSpaceBeforeTypeAnnotation": true,
    "typescript.format.semicolons": "insert",
    "typescript.format.trimTrailingWhitespace": true,
    "typescript.implementationsCodeLens.enabled": true,
    "typescript.referencesCodeLens.enabled": true,
    "javascript.inlayHints.includeInlayParameterNameHints": "all",
    "javascript.inlayHints.includeInlayVariableTypeHints": true,
    "javascript.referencesCodeLens.showOnAllFunctions": true,
    "typescript.inlayHints.includeInlayParameterNameHints": "all",
    "typescript.inlayHints.includeInlayVariableTypeHints": true,
    "typescript.referencesCodeLens.showOnAllFunctions": true,
    "javascript.format.insertSpaceAfterSemicolonInForStatements": true,
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
    "javascript.inlayHints.includeInlayEnumMemberValueHints": true,
    "javascript.inlayHints.includeInlayFunctionParameterTypeHints": true,
    "javascript.inlayHints.includeInlayPropertyDeclarationTypeHints": true,
    "typescript.format.insertSpaceAfterSemicolonInForStatements": true,
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
    "typescript.inlayHints.includeInlayEnumMemberValueHints": true,
    "typescript.inlayHints.includeInlayFunctionParameterTypeHints": true,
    "typescript.inlayHints.includeInlayPropertyDeclarationTypeHints": true,
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
    "javascript.format.placeOpenBraceOnNewLineForFunctions": false,
    "javascript.inlayHints.includeInlayFunctionLikeReturnTypeHints": true,
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
    "typescript.format.placeOpenBraceOnNewLineForFunctions": false,
    "typescript.inlayHints.includeInlayFunctionLikeReturnTypeHints": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": true,
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
    "javascript.inlayHints.includeInlayParameterNameHintsWhenArgumentMatchesName": true,
    "javascript.inlayHints.includeInlayVariableTypeHintsWhenTypeMatchesName": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
    "typescript.inlayHints.includeInlayParameterNameHintsWhenArgumentMatchesName": true,
    "typescript.inlayHints.includeInlayVariableTypeHintsWhenTypeMatchesName": true,
  },
  "disabled_capabilities": {
    "inlayHintProvider": true,
  },
  "enabled": true,
  "experimental_capabilities": {},
}
